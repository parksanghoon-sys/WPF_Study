<UserControl x:Class="CirclularGage.Main.TcasSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CirclularGage.Main"             
             xmlns:unit="clr-namespace:CirclularGage.Location.UI.Units;assembly=CirclularGage.Location"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <UserControl.Resources>



        
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#373737" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="10"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}">
                            <Grid>
                                <Border BorderThickness="1" CornerRadius="10" BorderBrush="#FFFFFF" Height="{TemplateBinding Height}">
                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                </Border>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#024270" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#424270" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="Transparent">
        <Border BorderThickness="1" BorderBrush="Transparent">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <TextBlock  Text="TcasIntruder Setting" 
                           FontSize="15" TextAlignment="Center" FontWeight="Bold"/>
                </Grid>
                <Grid Grid.Row="1" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="TcasIntruder TYPE "/>
                    <!--<ComboBox Grid.Column="1" Template="{DynamicResource ComboBoxTemplate1}"
                              ItemsSource="{Binding IntruderTypes}" 
                              SelectedItem="{Binding IntruderType, Mode=TwoWay}" 
                              Width="100" Height="20" Style="{StaticResource ComboBoxStyle}">
                        <ComboBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="ComboBoxItem"/>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>-->
                    <ComboBox Grid.Column="1" Template="{DynamicResource ComboBoxTemplate1}"
                              ItemsSource="{Binding IntruderTypes}" 
                              SelectedItem="{Binding IntruderType, Mode=TwoWay}" 
                              Width="100" Height="20" />
                </Grid>
                <Grid Grid.Row="2" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="IntruderVerticalSenseState"/>
                    <!--<ComboBox Template="{DynamicResource ComboBoxTemplate1}" Grid.Column="1"  ItemsSource="{Binding IntruderVerticalSenseStates}"                              
                              SelectedItem="{Binding IntruderVerticalMoveMentState, Mode=TwoWay}" 
                              Width="100" Height="20" Style="{StaticResource ComboBoxStyle}">
                        <ComboBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="ComboBoxItem"/>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>-->
                    <ComboBox Grid.Column="1"  ItemsSource="{Binding IntruderVerticalSenseStates}" Template="{StaticResource ComboBoxTemplate1}"
                              SelectedItem="{Binding IntruderVerticalMoveMentState, Mode=TwoWay}" IsReadOnly="False"
                              Width="100" Height="20"/>
                </Grid>
                <Grid Grid.Row="3" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="고도 : "/>
                    <unit:NumericUpDownControl Grid.Column="1" MaxValue="12700" MinValue="-12700" Foreground="Wheat"
                                              StepSize="100"  IsReadOnly="True" 
                                              NumberStyle="None" Value="{Binding Altitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Grid.Column="2" Text="상대거리 : " Margin="50 0 0 0"/>
                    <unit:NumericUpDownControl Grid.Column="3" MaxValue="127.9375" MinValue="0" Foreground="Wheat"
                                              StepSize=".1"  IsReadOnly="False" 
                                              NumberStyle="None" Value="{Binding Range, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
             
                <Grid Grid.Row="4" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="상대 각도 : "/>
                    <unit:NumericUpDownControl Grid.Column="1" MaxValue="180" MinValue="-180" Foreground="Wheat"
                                              StepSize="10"  IsReadOnly="False" 
                                              NumberStyle="None" Value="{Binding Bearing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid Grid.Row="5" Margin="3">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                        <Button Width="90" Height="30" Content="입력" Command="{Binding IntruderItemSendCommand}"/>
                        <Button Width="90" Height="30" Content="수정" Command="{Binding IntruderItemUpdateCommand}"/>
                    </StackPanel>
                    
                </Grid>
                <!--<TextBox x:Name="txtValue" Text="{Binding Score, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="50"/>
                <Button Content="전송" CommandParameter="{Binding Text, ElementName=txtValue}" Width="50"/>-->
            </Grid>
        </Border>
    </Grid>
</UserControl>
